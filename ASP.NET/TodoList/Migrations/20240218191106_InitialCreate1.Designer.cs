// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo.Models;

#nullable disable

namespace Todo.Migrations
{
    [DbContext(typeof(TodoListContext))]
    [Migration("20240218191106_InitialCreate1")]
    partial class InitialCreate1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Todo.Models.TodoItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TodoListId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("items");
                });

            modelBuilder.Entity("Todo.Models.TodoList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TodoListId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("lists");
                });

            modelBuilder.Entity("Todo.Models.TodoItem", b =>
                {
                    b.HasOne("Todo.Models.TodoList", "TodoList")
                        .WithMany()
                        .HasForeignKey("TodoListId");

                    b.Navigation("TodoList");
                });

            modelBuilder.Entity("Todo.Models.TodoList", b =>
                {
                    b.HasOne("Todo.Models.TodoList", null)
                        .WithMany("TodoLists")
                        .HasForeignKey("TodoListId");
                });

            modelBuilder.Entity("Todo.Models.TodoList", b =>
                {
                    b.Navigation("TodoLists");
                });
#pragma warning restore 612, 618
        }
    }
}
